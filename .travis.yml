---
sudo: required

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/

env:
  matrix:
    - distro: ubuntu1604
      init: /lib/systemd/systemd
      run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
#    - distro: debian8
#      init: /lib/systemd/systemd
#      run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
#    - distro: debian9
#      init: /lib/systemd/systemd
#      run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"

services:
  - docker

before_install:
  - 'sudo docker pull buluma/docker-${distro}-ansible:latest'

script:
  - container_id=$(mktemp)

#  - docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check
#  - docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml -v
  
  # Run docker container
  - 'sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} buluma/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  # Inspect docker container
  - 'sudo docker inspect $(cat ${container_id})'

  # Print ansible version
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible --version'

  # Check Ansible host setup
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible all -i "localhost," -c local -m setup'

  # Check the role/playbook's syntax
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/playbook.yml --syntax-check'
  
  # Run the role
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/playbook.yml'
  
  # Run the role/playbook again, checking to make sure it's idempotent.
  #- idempotence=$(mktemp)
  #- 'sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/playbook.yml --extra-vars "make_migration=false" | tee -a ${idempotence}'
  #- >
  #  tail ${idempotence}
  #  | grep -q 'changed=0.*failed=0'
  #  && (echo 'Idempotence test: pass' && exit 0)
  #  || (echo 'Idempotence test: fail' && exit 1)
  
  # Test role.
  #- 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml'
  
  # View container logs
  - 'sudo docker logs "$(cat ${container_id})"'

  # Clean up.
  - 'sudo docker stop "$(cat ${container_id})"'
